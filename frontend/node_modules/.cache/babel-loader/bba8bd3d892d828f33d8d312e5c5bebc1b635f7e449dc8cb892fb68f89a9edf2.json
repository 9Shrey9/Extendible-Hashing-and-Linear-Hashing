{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shrey\\\\Nirma\\\\database\\\\Lab\\\\Lab-03\\\\hash_project_v3\\\\project\\\\frontend\\\\src\\\\components\\\\App.js\";\n// import React, { useState } from 'react';\n\n// const App = () => {\n//     const [key, setKey] = useState('');\n//     const [value, setValue] = useState('');\n//     const [hashType, setHashType] = useState('extendible');\n//     const [result, setResult] = useState(null);\n//     const [error, setError] = useState(null);\n\n//     const handleInsert = async () => {\n//         setError(null); // Reset error before each request\n//         const response = await fetch(`/${hashType}/insert`, {\n//             method: 'POST',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({ key: parseInt(key), value })\n//         });\n\n//         if (response.ok) {\n//             const data = await response.json();\n//             setResult(data); // Display the current state of the hash table\n//         } else {\n//             const errorData = await response.json();\n//             setError(errorData.error || \"An error occurred while inserting.\");\n//         }\n//     };\n\n//     const handleSearch = async () => {\n//         setError(null);\n//         const response = await fetch(`/${hashType}/search?key=${key}`);\n//         if (response.ok) {\n//             const data = await response.json();\n//             setResult(data); // Display the found value\n//         } else {\n//             const errorData = await response.json();\n//             setError(errorData.error || \"An error occurred while searching.\");\n//         }\n//     };\n\n//     const handleDelete = async () => {\n//         setError(null);\n//         const response = await fetch(`/${hashType}/delete`, {\n//             method: 'DELETE',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({ key: parseInt(key) })\n//         });\n\n//         if (response.ok) {\n//             const data = await response.json();\n//             setResult(data); // Display the current state of the hash table\n//         } else {\n//             const errorData = await response.json();\n//             setError(errorData.error || \"An error occurred while deleting.\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Hashing Example</h1>\n//             <select onChange={(e) => setHashType(e.target.value)} value={hashType}>\n//                 <option value=\"extendible\">Extendible Hashing</option>\n//                 <option value=\"linear\">Linear Hashing</option>\n//             </select>\n//             <input\n//                 type=\"number\"\n//                 placeholder=\"Key\"\n//                 value={key}\n//                 onChange={(e) => setKey(e.target.value)}\n//             />\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Value\"\n//                 value={value}\n//                 onChange={(e) => setValue(e.target.value)}\n//             />\n//             <button onClick={handleInsert}>Insert</button>\n//             <button onClick={handleSearch}>Search</button>\n//             <button onClick={handleDelete}>Delete</button>\n\n//             {/* Display result or error message */}\n//             {result && <pre>Result: {JSON.stringify(result, null, 2)}</pre>}\n//             {error && <pre style={{ color: 'red' }}>Error: {error}</pre>}\n//         </div>\n//     );\n// };\n\n// export default App;\n\nimport React from 'react';\nimport InsertDeleteSearch from './InsertDeleteSearch'; // Import the combined component\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Extendible and Linear Hashing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InsertDeleteSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","InsertDeleteSearch","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Shrey/Nirma/database/Lab/Lab-03/hash_project_v3/project/frontend/src/components/App.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const App = () => {\r\n//     const [key, setKey] = useState('');\r\n//     const [value, setValue] = useState('');\r\n//     const [hashType, setHashType] = useState('extendible');\r\n//     const [result, setResult] = useState(null);\r\n//     const [error, setError] = useState(null);\r\n\r\n//     const handleInsert = async () => {\r\n//         setError(null); // Reset error before each request\r\n//         const response = await fetch(`/${hashType}/insert`, {\r\n//             method: 'POST',\r\n//             headers: { 'Content-Type': 'application/json' },\r\n//             body: JSON.stringify({ key: parseInt(key), value })\r\n//         });\r\n\r\n//         if (response.ok) {\r\n//             const data = await response.json();\r\n//             setResult(data); // Display the current state of the hash table\r\n//         } else {\r\n//             const errorData = await response.json();\r\n//             setError(errorData.error || \"An error occurred while inserting.\");\r\n//         }\r\n//     };\r\n\r\n//     const handleSearch = async () => {\r\n//         setError(null);\r\n//         const response = await fetch(`/${hashType}/search?key=${key}`);\r\n//         if (response.ok) {\r\n//             const data = await response.json();\r\n//             setResult(data); // Display the found value\r\n//         } else {\r\n//             const errorData = await response.json();\r\n//             setError(errorData.error || \"An error occurred while searching.\");\r\n//         }\r\n//     };\r\n\r\n//     const handleDelete = async () => {\r\n//         setError(null);\r\n//         const response = await fetch(`/${hashType}/delete`, {\r\n//             method: 'DELETE',\r\n//             headers: { 'Content-Type': 'application/json' },\r\n//             body: JSON.stringify({ key: parseInt(key) })\r\n//         });\r\n\r\n//         if (response.ok) {\r\n//             const data = await response.json();\r\n//             setResult(data); // Display the current state of the hash table\r\n//         } else {\r\n//             const errorData = await response.json();\r\n//             setError(errorData.error || \"An error occurred while deleting.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Hashing Example</h1>\r\n//             <select onChange={(e) => setHashType(e.target.value)} value={hashType}>\r\n//                 <option value=\"extendible\">Extendible Hashing</option>\r\n//                 <option value=\"linear\">Linear Hashing</option>\r\n//             </select>\r\n//             <input\r\n//                 type=\"number\"\r\n//                 placeholder=\"Key\"\r\n//                 value={key}\r\n//                 onChange={(e) => setKey(e.target.value)}\r\n//             />\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Value\"\r\n//                 value={value}\r\n//                 onChange={(e) => setValue(e.target.value)}\r\n//             />\r\n//             <button onClick={handleInsert}>Insert</button>\r\n//             <button onClick={handleSearch}>Search</button>\r\n//             <button onClick={handleDelete}>Delete</button>\r\n            \r\n//             {/* Display result or error message */}\r\n//             {result && <pre>Result: {JSON.stringify(result, null, 2)}</pre>}\r\n//             {error && <pre style={{ color: 'red' }}>Error: {error}</pre>}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default App;\r\n\r\nimport React from 'react';\r\nimport InsertDeleteSearch from './InsertDeleteSearch'; // Import the combined component\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Extendible and Linear Hashing</h1>\r\n            <InsertDeleteSearch /> {/* Render the InsertDeleteSearch component */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,MAAM,sBAAsB,CAAC,CAAC;AACvD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACd,oBACID,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBH,OAAA;MAAAG,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCP,OAAA,CAACF,kBAAkB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd,CAAC;AAACC,EAAA,GAPIP,GAAG;AAST,eAAeA,GAAG;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}